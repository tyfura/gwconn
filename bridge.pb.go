// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bridge.proto

package gwconn

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CmdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CmdReq) Reset() {
	*x = CmdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdReq) ProtoMessage() {}

func (x *CmdReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdReq.ProtoReflect.Descriptor instead.
func (*CmdReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{0}
}

type BridgeCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cmd:
	//
	//	*BridgeCmd_Target
	Cmd isBridgeCmd_Cmd `protobuf_oneof:"cmd"`
}

func (x *BridgeCmd) Reset() {
	*x = BridgeCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeCmd) ProtoMessage() {}

func (x *BridgeCmd) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeCmd.ProtoReflect.Descriptor instead.
func (*BridgeCmd) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{1}
}

func (m *BridgeCmd) GetCmd() isBridgeCmd_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (x *BridgeCmd) GetTarget() *BridgeTarget {
	if x, ok := x.GetCmd().(*BridgeCmd_Target); ok {
		return x.Target
	}
	return nil
}

type isBridgeCmd_Cmd interface {
	isBridgeCmd_Cmd()
}

type BridgeCmd_Target struct {
	Target *BridgeTarget `protobuf:"bytes,1,opt,name=target,proto3,oneof"`
}

func (*BridgeCmd_Target) isBridgeCmd_Cmd() {}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid      string `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os       string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	Arch     string `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterReq) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *RegisterReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *RegisterReq) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AcmeChallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn  string `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Val   string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *AcmeChallReq) Reset() {
	*x = AcmeChallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeChallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeChallReq) ProtoMessage() {}

func (x *AcmeChallReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeChallReq.ProtoReflect.Descriptor instead.
func (*AcmeChallReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{4}
}

func (x *AcmeChallReq) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *AcmeChallReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AcmeChallReq) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_bridge_proto protoreflect.FileDescriptor

var file_bridge_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x22, 0x42,
	0x0a, 0x09, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x77,
	0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x22, 0x5f, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x62, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x63, 0x68, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x4a, 0x0a, 0x0c, 0x41, 0x63, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x32, 0xe8, 0x02, 0x0a, 0x06, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06,
	0x42, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e,
	0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x09, 0x42, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x67, 0x77, 0x63,
	0x6f, 0x6e, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x04, 0x42, 0x56, 0x70, 0x6e, 0x12,
	0x0e, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x56, 0x70, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x56, 0x70, 0x6e, 0x43, 0x66, 0x67, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x05, 0x42, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x2e, 0x67, 0x77, 0x63,
	0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x42, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x2e,
	0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x73, 0x67, 0x1a, 0x13, 0x2e,
	0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x04, 0x42, 0x43, 0x6d, 0x64, 0x12, 0x0e, 0x2e, 0x67,
	0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x43, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x67,
	0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6d, 0x64, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0a, 0x42, 0x41, 0x63, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x12,
	0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x2e, 0x0a, 0x0e,
	0x69, 0x6f, 0x2e, 0x74, 0x79, 0x66, 0x74, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x42, 0x00,
	0x50, 0x01, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x79, 0x66, 0x75, 0x72, 0x61, 0x2f, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bridge_proto_rawDescOnce sync.Once
	file_bridge_proto_rawDescData = file_bridge_proto_rawDesc
)

func file_bridge_proto_rawDescGZIP() []byte {
	file_bridge_proto_rawDescOnce.Do(func() {
		file_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_bridge_proto_rawDescData)
	})
	return file_bridge_proto_rawDescData
}

var file_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bridge_proto_goTypes = []interface{}{
	(*CmdReq)(nil),       // 0: gwconn.CmdReq
	(*BridgeCmd)(nil),    // 1: gwconn.BridgeCmd
	(*RegisterReq)(nil),  // 2: gwconn.RegisterReq
	(*RegisterResp)(nil), // 3: gwconn.RegisterResp
	(*AcmeChallReq)(nil), // 4: gwconn.AcmeChallReq
	(*BridgeTarget)(nil), // 5: gwconn.BridgeTarget
	(*LoginReq)(nil),     // 6: gwconn.LoginReq
	(*VpnReq)(nil),       // 7: gwconn.VpnReq
	(*BridgeStat)(nil),   // 8: gwconn.BridgeStat
	(*LogMsg)(nil),       // 9: gwconn.LogMsg
	(*LoginResp)(nil),    // 10: gwconn.LoginResp
	(*VpnCfg)(nil),       // 11: gwconn.VpnCfg
	(*GeneralResp)(nil),  // 12: gwconn.GeneralResp
}
var file_bridge_proto_depIdxs = []int32{
	5,  // 0: gwconn.BridgeCmd.target:type_name -> gwconn.BridgeTarget
	6,  // 1: gwconn.Bridge.BLogin:input_type -> gwconn.LoginReq
	2,  // 2: gwconn.Bridge.BRegister:input_type -> gwconn.RegisterReq
	7,  // 3: gwconn.Bridge.BVpn:input_type -> gwconn.VpnReq
	8,  // 4: gwconn.Bridge.BStat:input_type -> gwconn.BridgeStat
	9,  // 5: gwconn.Bridge.BLog:input_type -> gwconn.LogMsg
	0,  // 6: gwconn.Bridge.BCmd:input_type -> gwconn.CmdReq
	4,  // 7: gwconn.Bridge.BAcmeChall:input_type -> gwconn.AcmeChallReq
	10, // 8: gwconn.Bridge.BLogin:output_type -> gwconn.LoginResp
	3,  // 9: gwconn.Bridge.BRegister:output_type -> gwconn.RegisterResp
	11, // 10: gwconn.Bridge.BVpn:output_type -> gwconn.VpnCfg
	12, // 11: gwconn.Bridge.BStat:output_type -> gwconn.GeneralResp
	12, // 12: gwconn.Bridge.BLog:output_type -> gwconn.GeneralResp
	1,  // 13: gwconn.Bridge.BCmd:output_type -> gwconn.BridgeCmd
	12, // 14: gwconn.Bridge.BAcmeChall:output_type -> gwconn.GeneralResp
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_bridge_proto_init() }
func file_bridge_proto_init() {
	if File_bridge_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bridge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeChallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bridge_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BridgeCmd_Target)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bridge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bridge_proto_goTypes,
		DependencyIndexes: file_bridge_proto_depIdxs,
		MessageInfos:      file_bridge_proto_msgTypes,
	}.Build()
	File_bridge_proto = out.File
	file_bridge_proto_rawDesc = nil
	file_bridge_proto_goTypes = nil
	file_bridge_proto_depIdxs = nil
}
