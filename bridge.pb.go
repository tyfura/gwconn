// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bridge.proto

package gwconn

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BridgeRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BridgeId string `protobuf:"bytes,1,opt,name=bridgeId,proto3" json:"bridgeId,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os       string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	Arch     string `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`
}

func (x *BridgeRegisterReq) Reset() {
	*x = BridgeRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeRegisterReq) ProtoMessage() {}

func (x *BridgeRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeRegisterReq.ProtoReflect.Descriptor instead.
func (*BridgeRegisterReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *BridgeRegisterReq) GetBridgeId() string {
	if x != nil {
		return x.BridgeId
	}
	return ""
}

func (x *BridgeRegisterReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *BridgeRegisterReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *BridgeRegisterReq) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BridgeLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BridgeId string `protobuf:"bytes,1,opt,name=bridgeId,proto3" json:"bridgeId,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *BridgeLoginReq) Reset() {
	*x = BridgeLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeLoginReq) ProtoMessage() {}

func (x *BridgeLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeLoginReq.ProtoReflect.Descriptor instead.
func (*BridgeLoginReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{2}
}

func (x *BridgeLoginReq) GetBridgeId() string {
	if x != nil {
		return x.BridgeId
	}
	return ""
}

func (x *BridgeLoginReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type JoinStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinStreamReq) Reset() {
	*x = JoinStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinStreamReq) ProtoMessage() {}

func (x *JoinStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinStreamReq.ProtoReflect.Descriptor instead.
func (*JoinStreamReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{4}
}

type BridgeTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act     uint32 `protobuf:"varint,1,opt,name=act,proto3" json:"act,omitempty"`
	TargeId string `protobuf:"bytes,2,opt,name=targeId,proto3" json:"targeId,omitempty"`
	Fqdn    string `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Addr    string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Typ     uint32 `protobuf:"varint,5,opt,name=typ,proto3" json:"typ,omitempty"`
}

func (x *BridgeTarget) Reset() {
	*x = BridgeTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTarget) ProtoMessage() {}

func (x *BridgeTarget) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTarget.ProtoReflect.Descriptor instead.
func (*BridgeTarget) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{5}
}

func (x *BridgeTarget) GetAct() uint32 {
	if x != nil {
		return x.Act
	}
	return 0
}

func (x *BridgeTarget) GetTargeId() string {
	if x != nil {
		return x.TargeId
	}
	return ""
}

func (x *BridgeTarget) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *BridgeTarget) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *BridgeTarget) GetTyp() uint32 {
	if x != nil {
		return x.Typ
	}
	return 0
}

type DnsAcmeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSet bool   `protobuf:"varint,1,opt,name=isSet,proto3" json:"isSet,omitempty"`
	Fqdn  string `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Val   string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *DnsAcmeReq) Reset() {
	*x = DnsAcmeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsAcmeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsAcmeReq) ProtoMessage() {}

func (x *DnsAcmeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsAcmeReq.ProtoReflect.Descriptor instead.
func (*DnsAcmeReq) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{6}
}

func (x *DnsAcmeReq) GetIsSet() bool {
	if x != nil {
		return x.IsSet
	}
	return false
}

func (x *DnsAcmeReq) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *DnsAcmeReq) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type SystemStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpustat  []uint32 `protobuf:"varint,1,rep,packed,name=cpustat,proto3" json:"cpustat,omitempty"`
	MaxRam   uint64   `protobuf:"varint,2,opt,name=maxRam,proto3" json:"maxRam,omitempty"`
	RamBuf   uint64   `protobuf:"varint,3,opt,name=ramBuf,proto3" json:"ramBuf,omitempty"`
	RamUsed  uint64   `protobuf:"varint,4,opt,name=ramUsed,proto3" json:"ramUsed,omitempty"`
	MaxDisk  uint64   `protobuf:"varint,5,opt,name=maxDisk,proto3" json:"maxDisk,omitempty"`
	DiskUsed uint64   `protobuf:"varint,6,opt,name=diskUsed,proto3" json:"diskUsed,omitempty"`
	Conns    uint32   `protobuf:"varint,7,opt,name=conns,proto3" json:"conns,omitempty"`
}

func (x *SystemStat) Reset() {
	*x = SystemStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStat) ProtoMessage() {}

func (x *SystemStat) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStat.ProtoReflect.Descriptor instead.
func (*SystemStat) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{7}
}

func (x *SystemStat) GetCpustat() []uint32 {
	if x != nil {
		return x.Cpustat
	}
	return nil
}

func (x *SystemStat) GetMaxRam() uint64 {
	if x != nil {
		return x.MaxRam
	}
	return 0
}

func (x *SystemStat) GetRamBuf() uint64 {
	if x != nil {
		return x.RamBuf
	}
	return 0
}

func (x *SystemStat) GetRamUsed() uint64 {
	if x != nil {
		return x.RamUsed
	}
	return 0
}

func (x *SystemStat) GetMaxDisk() uint64 {
	if x != nil {
		return x.MaxDisk
	}
	return 0
}

func (x *SystemStat) GetDiskUsed() uint64 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

func (x *SystemStat) GetConns() uint32 {
	if x != nil {
		return x.Conns
	}
	return 0
}

type RouteStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId      string `protobuf:"bytes,1,opt,name=routeId,proto3" json:"routeId,omitempty"`
	Conns        uint64 `protobuf:"varint,2,opt,name=conns,proto3" json:"conns,omitempty"`
	TrafOut      uint64 `protobuf:"varint,3,opt,name=trafOut,proto3" json:"trafOut,omitempty"`
	TrafOutDelta uint64 `protobuf:"varint,4,opt,name=trafOutDelta,proto3" json:"trafOutDelta,omitempty"`
	TrafIn       uint64 `protobuf:"varint,5,opt,name=trafIn,proto3" json:"trafIn,omitempty"`
	TrafInDelta  uint64 `protobuf:"varint,6,opt,name=trafInDelta,proto3" json:"trafInDelta,omitempty"`
}

func (x *RouteStat) Reset() {
	*x = RouteStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteStat) ProtoMessage() {}

func (x *RouteStat) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteStat.ProtoReflect.Descriptor instead.
func (*RouteStat) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{8}
}

func (x *RouteStat) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *RouteStat) GetConns() uint64 {
	if x != nil {
		return x.Conns
	}
	return 0
}

func (x *RouteStat) GetTrafOut() uint64 {
	if x != nil {
		return x.TrafOut
	}
	return 0
}

func (x *RouteStat) GetTrafOutDelta() uint64 {
	if x != nil {
		return x.TrafOutDelta
	}
	return 0
}

func (x *RouteStat) GetTrafIn() uint64 {
	if x != nil {
		return x.TrafIn
	}
	return 0
}

func (x *RouteStat) GetTrafInDelta() uint64 {
	if x != nil {
		return x.TrafInDelta
	}
	return 0
}

type LogLineMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Line   string `protobuf:"bytes,2,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *LogLineMsg) Reset() {
	*x = LogLineMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLineMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLineMsg) ProtoMessage() {}

func (x *LogLineMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLineMsg.ProtoReflect.Descriptor instead.
func (*LogLineMsg) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{9}
}

func (x *LogLineMsg) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *LogLineMsg) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

var File_bridge_proto protoreflect.FileDescriptor

var file_bridge_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x11, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x63, 0x68, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3e, 0x0a, 0x0e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x21, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x4a, 0x6f, 0x69,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x22, 0x74, 0x0a, 0x0c, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x79, 0x70,
	0x22, 0x48, 0x0a, 0x0a, 0x44, 0x6e, 0x73, 0x41, 0x63, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75,
	0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x70, 0x75, 0x73,
	0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x6d, 0x42, 0x75, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x61, 0x6d,
	0x42, 0x75, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x55,
	0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x4f,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x66, 0x4f, 0x75,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x4f, 0x75, 0x74,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x22,
	0x38, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0xb8, 0x03, 0x0a, 0x09, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x16, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x15, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x6e, 0x73, 0x41, 0x63, 0x6d, 0x65, 0x12,
	0x12, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x44, 0x6e, 0x73, 0x41, 0x63, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x12, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0d, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11,
	0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x53,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x2e, 0x0a, 0x0e, 0x69, 0x6f, 0x2e, 0x74, 0x79, 0x66, 0x74, 0x2e,
	0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x42, 0x00, 0x50, 0x01, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x66, 0x75, 0x72, 0x61, 0x2f, 0x67, 0x77,
	0x63, 0x6f, 0x6e, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bridge_proto_rawDescOnce sync.Once
	file_bridge_proto_rawDescData = file_bridge_proto_rawDesc
)

func file_bridge_proto_rawDescGZIP() []byte {
	file_bridge_proto_rawDescOnce.Do(func() {
		file_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_bridge_proto_rawDescData)
	})
	return file_bridge_proto_rawDescData
}

var file_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_bridge_proto_goTypes = []interface{}{
	(*BridgeRegisterReq)(nil), // 0: gwconn.BridgeRegisterReq
	(*RegisterResp)(nil),      // 1: gwconn.RegisterResp
	(*BridgeLoginReq)(nil),    // 2: gwconn.BridgeLoginReq
	(*LoginResp)(nil),         // 3: gwconn.LoginResp
	(*JoinStreamReq)(nil),     // 4: gwconn.JoinStreamReq
	(*BridgeTarget)(nil),      // 5: gwconn.BridgeTarget
	(*DnsAcmeReq)(nil),        // 6: gwconn.DnsAcmeReq
	(*SystemStat)(nil),        // 7: gwconn.SystemStat
	(*RouteStat)(nil),         // 8: gwconn.RouteStat
	(*LogLineMsg)(nil),        // 9: gwconn.LogLineMsg
	(*empty.Empty)(nil),       // 10: google.protobuf.Empty
}
var file_bridge_proto_depIdxs = []int32{
	0,  // 0: gwconn.BridgeApi.Register:input_type -> gwconn.BridgeRegisterReq
	2,  // 1: gwconn.BridgeApi.Login:input_type -> gwconn.BridgeLoginReq
	4,  // 2: gwconn.BridgeApi.GetTargetStream:input_type -> gwconn.JoinStreamReq
	6,  // 3: gwconn.BridgeApi.CallDnsAcme:input_type -> gwconn.DnsAcmeReq
	7,  // 4: gwconn.BridgeApi.SendSystemStat:input_type -> gwconn.SystemStat
	8,  // 5: gwconn.BridgeApi.SendRouteInfo:input_type -> gwconn.RouteStat
	9,  // 6: gwconn.BridgeApi.SendLog:input_type -> gwconn.LogLineMsg
	1,  // 7: gwconn.BridgeApi.Register:output_type -> gwconn.RegisterResp
	3,  // 8: gwconn.BridgeApi.Login:output_type -> gwconn.LoginResp
	5,  // 9: gwconn.BridgeApi.GetTargetStream:output_type -> gwconn.BridgeTarget
	10, // 10: gwconn.BridgeApi.CallDnsAcme:output_type -> google.protobuf.Empty
	10, // 11: gwconn.BridgeApi.SendSystemStat:output_type -> google.protobuf.Empty
	10, // 12: gwconn.BridgeApi.SendRouteInfo:output_type -> google.protobuf.Empty
	10, // 13: gwconn.BridgeApi.SendLog:output_type -> google.protobuf.Empty
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_bridge_proto_init() }
func file_bridge_proto_init() {
	if File_bridge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bridge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsAcmeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLineMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bridge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bridge_proto_goTypes,
		DependencyIndexes: file_bridge_proto_depIdxs,
		MessageInfos:      file_bridge_proto_msgTypes,
	}.Build()
	File_bridge_proto = out.File
	file_bridge_proto_rawDesc = nil
	file_bridge_proto_goTypes = nil
	file_bridge_proto_depIdxs = nil
}
