// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: gw.proto

package gwconn

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BridgeAckT int32

const (
	BridgeAckT_Deny        BridgeAckT = 0
	BridgeAckT_Acknowledge BridgeAckT = 1
)

// Enum value maps for BridgeAckT.
var (
	BridgeAckT_name = map[int32]string{
		0: "Deny",
		1: "Acknowledge",
	}
	BridgeAckT_value = map[string]int32{
		"Deny":        0,
		"Acknowledge": 1,
	}
)

func (x BridgeAckT) Enum() *BridgeAckT {
	p := new(BridgeAckT)
	*p = x
	return p
}

func (x BridgeAckT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BridgeAckT) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[0].Descriptor()
}

func (BridgeAckT) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[0]
}

func (x BridgeAckT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BridgeAckT.Descriptor instead.
func (BridgeAckT) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{0}
}

type JoinStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinStreamReq) Reset() {
	*x = JoinStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinStreamReq) ProtoMessage() {}

func (x *JoinStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinStreamReq.ProtoReflect.Descriptor instead.
func (*JoinStreamReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uname string `protobuf:"bytes,1,opt,name=uname,proto3" json:"uname,omitempty"`
	Pass  string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	Role  string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *User) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Page    uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32 `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
	// Types that are assignable to List:
	//
	//	*ListResponse_Users
	//	*ListResponse_Bridges
	List isListResponse_List `protobuf_oneof:"list"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{2}
}

func (x *ListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListResponse) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (m *ListResponse) GetList() isListResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *ListResponse) GetUsers() *Users {
	if x, ok := x.GetList().(*ListResponse_Users); ok {
		return x.Users
	}
	return nil
}

func (x *ListResponse) GetBridges() *Bridges {
	if x, ok := x.GetList().(*ListResponse_Bridges); ok {
		return x.Bridges
	}
	return nil
}

type isListResponse_List interface {
	isListResponse_List()
}

type ListResponse_Users struct {
	Users *Users `protobuf:"bytes,4,opt,name=users,proto3,oneof"`
}

type ListResponse_Bridges struct {
	Bridges *Bridges `protobuf:"bytes,5,opt,name=bridges,proto3,oneof"`
}

func (*ListResponse_Users) isListResponse_List() {}

func (*ListResponse_Bridges) isListResponse_List() {}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type BridgeAckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrId      string     `protobuf:"bytes,1,opt,name=brId,proto3" json:"brId,omitempty"`
	NewName   string     `protobuf:"bytes,2,opt,name=newName,proto3" json:"newName,omitempty"`
	BridgeAck BridgeAckT `protobuf:"varint,3,opt,name=bridgeAck,proto3,enum=gwconn.BridgeAckT" json:"bridgeAck,omitempty"`
}

func (x *BridgeAckReq) Reset() {
	*x = BridgeAckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeAckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeAckReq) ProtoMessage() {}

func (x *BridgeAckReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeAckReq.ProtoReflect.Descriptor instead.
func (*BridgeAckReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{4}
}

func (x *BridgeAckReq) GetBrId() string {
	if x != nil {
		return x.BrId
	}
	return ""
}

func (x *BridgeAckReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *BridgeAckReq) GetBridgeAck() BridgeAckT {
	if x != nil {
		return x.BridgeAck
	}
	return BridgeAckT_Deny
}

type DelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelReq) Reset() {
	*x = DelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReq) ProtoMessage() {}

func (x *DelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReq.ProtoReflect.Descriptor instead.
func (*DelReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{5}
}

func (x *DelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_gw_proto protoreflect.FileDescriptor

var file_gw_proto_rawDesc = []byte{
	0x0a, 0x08, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x77, 0x63, 0x6f,
	0x6e, 0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0f, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x22, 0x44, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x77,
	0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x0c, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x54, 0x52, 0x09, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x41, 0x63, 0x6b, 0x22, 0x1c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x27, 0x0a, 0x0a, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x54, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x65, 0x6e, 0x79, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x10, 0x01, 0x32, 0xe1, 0x03, 0x0a,
	0x02, 0x47, 0x57, 0x12, 0x2e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x67,
	0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0d, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x65, 0x77, 0x12, 0x0f, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x09, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x67, 0x77, 0x63,
	0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x09, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x12, 0x12, 0x2e, 0x67, 0x77,
	0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x12, 0x0c, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a,
	0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x0c, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x12, 0x0e, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x77, 0x63, 0x6f, 0x6e,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2e, 0x0a, 0x0e, 0x69, 0x6f, 0x2e, 0x74, 0x79, 0x66, 0x74, 0x2e, 0x67, 0x77, 0x63, 0x6f,
	0x6e, 0x6e, 0x42, 0x00, 0x50, 0x01, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x66, 0x75, 0x72, 0x61, 0x2f, 0x67, 0x77, 0x63, 0x6f, 0x6e, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gw_proto_rawDescOnce sync.Once
	file_gw_proto_rawDescData = file_gw_proto_rawDesc
)

func file_gw_proto_rawDescGZIP() []byte {
	file_gw_proto_rawDescOnce.Do(func() {
		file_gw_proto_rawDescData = protoimpl.X.CompressGZIP(file_gw_proto_rawDescData)
	})
	return file_gw_proto_rawDescData
}

var file_gw_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gw_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gw_proto_goTypes = []interface{}{
	(BridgeAckT)(0),       // 0: gwconn.BridgeAckT
	(*JoinStreamReq)(nil), // 1: gwconn.JoinStreamReq
	(*User)(nil),          // 2: gwconn.User
	(*ListResponse)(nil),  // 3: gwconn.ListResponse
	(*Users)(nil),         // 4: gwconn.Users
	(*BridgeAckReq)(nil),  // 5: gwconn.BridgeAckReq
	(*DelReq)(nil),        // 6: gwconn.DelReq
	(*Bridges)(nil),       // 7: gwconn.Bridges
	(*LoginReq)(nil),      // 8: gwconn.LoginReq
	(*ListReq)(nil),       // 9: gwconn.ListReq
	(*BridgeInfo)(nil),    // 10: gwconn.BridgeInfo
	(*LoginResp)(nil),     // 11: gwconn.LoginResp
	(*GeneralResp)(nil),   // 12: gwconn.GeneralResp
}
var file_gw_proto_depIdxs = []int32{
	4,  // 0: gwconn.ListResponse.users:type_name -> gwconn.Users
	7,  // 1: gwconn.ListResponse.bridges:type_name -> gwconn.Bridges
	2,  // 2: gwconn.Users.users:type_name -> gwconn.User
	0,  // 3: gwconn.BridgeAckReq.bridgeAck:type_name -> gwconn.BridgeAckT
	8,  // 4: gwconn.GW.Login:input_type -> gwconn.LoginReq
	9,  // 5: gwconn.GW.BridgeListNew:input_type -> gwconn.ListReq
	5,  // 6: gwconn.GW.BridgeAck:input_type -> gwconn.BridgeAckReq
	9,  // 7: gwconn.GW.BridgeList:input_type -> gwconn.ListReq
	10, // 8: gwconn.GW.BridgeDel:input_type -> gwconn.BridgeInfo
	2,  // 9: gwconn.GW.UserAdd:input_type -> gwconn.User
	2,  // 10: gwconn.GW.UserChange:input_type -> gwconn.User
	6,  // 11: gwconn.GW.UserDel:input_type -> gwconn.DelReq
	9,  // 12: gwconn.GW.UserList:input_type -> gwconn.ListReq
	11, // 13: gwconn.GW.Login:output_type -> gwconn.LoginResp
	3,  // 14: gwconn.GW.BridgeListNew:output_type -> gwconn.ListResponse
	12, // 15: gwconn.GW.BridgeAck:output_type -> gwconn.GeneralResp
	3,  // 16: gwconn.GW.BridgeList:output_type -> gwconn.ListResponse
	12, // 17: gwconn.GW.BridgeDel:output_type -> gwconn.GeneralResp
	12, // 18: gwconn.GW.UserAdd:output_type -> gwconn.GeneralResp
	12, // 19: gwconn.GW.UserChange:output_type -> gwconn.GeneralResp
	12, // 20: gwconn.GW.UserDel:output_type -> gwconn.GeneralResp
	3,  // 21: gwconn.GW.UserList:output_type -> gwconn.ListResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_gw_proto_init() }
func file_gw_proto_init() {
	if File_gw_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeAckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gw_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListResponse_Users)(nil),
		(*ListResponse_Bridges)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gw_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gw_proto_goTypes,
		DependencyIndexes: file_gw_proto_depIdxs,
		EnumInfos:         file_gw_proto_enumTypes,
		MessageInfos:      file_gw_proto_msgTypes,
	}.Build()
	File_gw_proto = out.File
	file_gw_proto_rawDesc = nil
	file_gw_proto_goTypes = nil
	file_gw_proto_depIdxs = nil
}
